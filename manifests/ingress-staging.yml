apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    name: "o2-identity-web-ingreess"
    labels:
        app: "o2-identity-web"
    annotations:
        # kubernetes.io/ingress.class: addon-http-application-routing
        # kubernetes.io/ingress.class: nginx
        # certmanager.k8s.io/acme-challenge-type: http01
        # kubernetes.io/tls-acme: 'true'
        # cert-manager.io/issuer: letsencrypt-prod
        # certmanager.k8s.io/cluster-issuer: letsencrypt-prod
        # kubernetes.io/ingress.class: addon-http-application-routing
        # ingress.kubernetes.io/ssl-redirect: "false"
        # nginx.ingress.kubernetes.io/ssl-redirect: "false"
        #kubernetes.io/ingress.class: nginx
        #issuer.cert-manager.io/issuer: letsencrypt-prod
        #kubernetes.io/ingress.class: nginx
        # ertmanager.k8s.io/acme-challenge-type: http01
        # kubernetes.io/ingress.class: addon-http-application-routing
        # ingress.kubernetes.io/ssl-redirect: false
        # nginx.ingress.kubernetes.io/ssl-redirect: false
        # kubernetes.io/ingress.class: addon-http-application-routing
        # ingress.kubernetes.io/ssl-redirect: "false"
        # nginx.ingress.kubernetes.io/ssl-redirect: "false"
        cert-manager.io/issuer: letsencrypt-staging
        
spec:
    tls:
        - hosts:
          # - tls-prod-o2platformcluster-397a.cedc7c6f3e354120aaa6.eastus.aksapp.io
          # -  www.identity.stage.o2bus.com
          - identity.stage.o2bus.com
          secretName: letsencrypt-staging
    rules:
        # - host: www.identity.stage.o2bus.com
        #   http:
        #     paths:
        #     - path: /
        #       backend:
        #         serviceName: "o2-identity-web-svc"
        #         servicePort: 80
        - host: identity.stage.o2bus.com
          http:
            paths:
            - path: /
              backend:
                serviceName: "o2-identity-web-svc"
                servicePort: 80
